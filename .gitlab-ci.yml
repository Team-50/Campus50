stages:
  - build
  - test 
  - deploy 

cache:
  paths:
    - frontend/node_modules/
    - backend/vendor

build:
  stage : build
  script:
    - cd frontend
    - npm install
    - rm -rf .env.production    
    - cp .env.production.example .env.production  
    - npm run build    
    - cd ..
    - ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "mkdir -p $SSH_PATH/campus50/frontend_temp"
    - rsync -arvz -e "ssh -p $SSH_PORT" --progress frontend/dist/ $SSH_USERNAME@$SSH_HOST:$SSH_PATH/campus50/frontend_temp    
    - ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "mv $SSH_PATH/campus50/frontend $SSH_PATH/campus50/frontend_old && mv $SSH_PATH/campus50/frontend_temp $SSH_PATH/campus50/frontend"
    - ssh -p $SSH_PORT $SSH_USERNAME@$SSH_HOST "rm -rf $SSH_PATH/campus50/frontend_old"
    - rsync -arvz -e "ssh -p $SSH_PORT" --progress backend/app $SSH_USERNAME@$SSH_HOST:$SSH_PATH/campus50/backend
    - rsync -arvz -e "ssh -p $SSH_PORT" --progress backend/database $SSH_USERNAME@$SSH_HOST:$SSH_PATH/campus50/backend
    - rsync -arvz -e "ssh -p $SSH_PORT" --progress backend/routes $SSH_USERNAME@$SSH_HOST:$SSH_PATH/campus50/backend    
    - rsync -arvz -e "ssh -p $SSH_PORT" --progress backend/resources $SSH_USERNAME@$SSH_HOST:$SSH_PATH/campus50/backend    
    - rsync -arvz -e "ssh -p $SSH_PORT" --progress backend/.env.example $SSH_USERNAME@$SSH_HOST:$SSH_PATH/campus50/backend           
    
    
test:
  stage: test
  script:
    - echo "Ini tahap testing"
    - cd frontend    
    - cd ..
deploy:
  stage: deploy
  script:
    - echo "Ini tahap deploye "
